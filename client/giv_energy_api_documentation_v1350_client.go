// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mgazza/go-givenergy/client/account"
	"github.com/mgazza/go-givenergy/client/communication_device"
	"github.com/mgazza/go-givenergy/client/e_m_s_data"
	"github.com/mgazza/go-givenergy/client/e_v_charger"
	"github.com/mgazza/go-givenergy/client/energy_flow_data"
	"github.com/mgazza/go-givenergy/client/inverter_control"
	"github.com/mgazza/go-givenergy/client/inverter_data"
	"github.com/mgazza/go-givenergy/client/meter"
	"github.com/mgazza/go-givenergy/client/notifications"
	"github.com/mgazza/go-givenergy/client/site"
	"github.com/mgazza/go-givenergy/client/smart_device"
)

// Default giv energy API documentation v1350 HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.givenergy.cloud"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new giv energy API documentation v1350 HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GivEnergyAPIDocumentationV1350 {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new giv energy API documentation v1350 HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GivEnergyAPIDocumentationV1350 {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new giv energy API documentation v1350 client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GivEnergyAPIDocumentationV1350 {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GivEnergyAPIDocumentationV1350)
	cli.Transport = transport
	cli.Account = account.New(transport, formats)
	cli.CommunicationDevice = communication_device.New(transport, formats)
	cli.EmsData = e_m_s_data.New(transport, formats)
	cli.EvCharger = e_v_charger.New(transport, formats)
	cli.EnergyFlowData = energy_flow_data.New(transport, formats)
	cli.InverterControl = inverter_control.New(transport, formats)
	cli.InverterData = inverter_data.New(transport, formats)
	cli.Meter = meter.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.Site = site.New(transport, formats)
	cli.SmartDevice = smart_device.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GivEnergyAPIDocumentationV1350 is a client for giv energy API documentation v1350
type GivEnergyAPIDocumentationV1350 struct {
	Account account.ClientService

	CommunicationDevice communication_device.ClientService

	EmsData e_m_s_data.ClientService

	EvCharger e_v_charger.ClientService

	EnergyFlowData energy_flow_data.ClientService

	InverterControl inverter_control.ClientService

	InverterData inverter_data.ClientService

	Meter meter.ClientService

	Notifications notifications.ClientService

	Site site.ClientService

	SmartDevice smart_device.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GivEnergyAPIDocumentationV1350) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Account.SetTransport(transport)
	c.CommunicationDevice.SetTransport(transport)
	c.EmsData.SetTransport(transport)
	c.EvCharger.SetTransport(transport)
	c.EnergyFlowData.SetTransport(transport)
	c.InverterControl.SetTransport(transport)
	c.InverterData.SetTransport(transport)
	c.Meter.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.Site.SetTransport(transport)
	c.SmartDevice.SetTransport(transport)
}
