// Code generated by go-swagger; DO NOT EDIT.

package inverter_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetSettingsListReader is a Reader for the GetSettingsList structure.
type GetSettingsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSettingsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSettingsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /inverter/{inverter_serial_number}/settings] getSettingsList", response, response.Code())
	}
}

// NewGetSettingsListOK creates a GetSettingsListOK with default headers values
func NewGetSettingsListOK() *GetSettingsListOK {
	return &GetSettingsListOK{}
}

/*
GetSettingsListOK describes a response with status code 200, with default header values.

GetSettingsListOK get settings list o k
*/
type GetSettingsListOK struct {
	Payload *GetSettingsListOKBody
}

// IsSuccess returns true when this get settings list o k response has a 2xx status code
func (o *GetSettingsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get settings list o k response has a 3xx status code
func (o *GetSettingsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get settings list o k response has a 4xx status code
func (o *GetSettingsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get settings list o k response has a 5xx status code
func (o *GetSettingsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get settings list o k response a status code equal to that given
func (o *GetSettingsListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get settings list o k response
func (o *GetSettingsListOK) Code() int {
	return 200
}

func (o *GetSettingsListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inverter/{inverter_serial_number}/settings][%d] getSettingsListOK %s", 200, payload)
}

func (o *GetSettingsListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inverter/{inverter_serial_number}/settings][%d] getSettingsListOK %s", 200, payload)
}

func (o *GetSettingsListOK) GetPayload() *GetSettingsListOKBody {
	return o.Payload
}

func (o *GetSettingsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSettingsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetSettingsListOKBody get settings list o k body
// Example: {"data":[{"id":266,"name":"DC Discharge 3 End Time","validation":"Value format should be HH:mm. Use correct time range for hour and minutes","validation_rules":["date_format:H:i"]}]}
swagger:model GetSettingsListOKBody
*/
type GetSettingsListOKBody struct {

	// data
	// Example: [{"id":266,"name":"DC Discharge 3 End Time","validation":"Value format should be HH:mm. Use correct time range for hour and minutes","validation_rules":["date_format:H:i"]}]
	Data []*GetSettingsListOKBodyDataItems0 `json:"data"`
}

// Validate validates this get settings list o k body
func (o *GetSettingsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSettingsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getSettingsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getSettingsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get settings list o k body based on the context it is used
func (o *GetSettingsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSettingsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getSettingsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getSettingsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetSettingsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSettingsListOKBody) UnmarshalBinary(b []byte) error {
	var res GetSettingsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetSettingsListOKBodyDataItems0 get settings list o k body data items0
swagger:model GetSettingsListOKBodyDataItems0
*/
type GetSettingsListOKBodyDataItems0 struct {

	// id
	// Example: 266
	ID int64 `json:"id,omitempty"`

	// name
	// Example: DC Discharge 3 End Time
	Name string `json:"name,omitempty"`

	// validation
	// Example: Value format should be HH:mm. Use correct time range for hour and minutes
	Validation string `json:"validation,omitempty"`

	// validation rules
	// Example: ["date_format:H:i"]
	ValidationRules []string `json:"validation_rules"`
}

// Validate validates this get settings list o k body data items0
func (o *GetSettingsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get settings list o k body data items0 based on context it is used
func (o *GetSettingsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSettingsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSettingsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetSettingsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
