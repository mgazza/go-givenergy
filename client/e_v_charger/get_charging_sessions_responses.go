// Code generated by go-swagger; DO NOT EDIT.

package e_v_charger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetChargingSessionsReader is a Reader for the GetChargingSessions structure.
type GetChargingSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChargingSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChargingSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /ev-charger/{charger_uuid}/charging-sessions] getChargingSessions", response, response.Code())
	}
}

// NewGetChargingSessionsOK creates a GetChargingSessionsOK with default headers values
func NewGetChargingSessionsOK() *GetChargingSessionsOK {
	return &GetChargingSessionsOK{}
}

/*
GetChargingSessionsOK describes a response with status code 200, with default header values.

GetChargingSessionsOK get charging sessions o k
*/
type GetChargingSessionsOK struct {
	Payload *GetChargingSessionsOKBody
}

// IsSuccess returns true when this get charging sessions o k response has a 2xx status code
func (o *GetChargingSessionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get charging sessions o k response has a 3xx status code
func (o *GetChargingSessionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get charging sessions o k response has a 4xx status code
func (o *GetChargingSessionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get charging sessions o k response has a 5xx status code
func (o *GetChargingSessionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get charging sessions o k response a status code equal to that given
func (o *GetChargingSessionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get charging sessions o k response
func (o *GetChargingSessionsOK) Code() int {
	return 200
}

func (o *GetChargingSessionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ev-charger/{charger_uuid}/charging-sessions][%d] getChargingSessionsOK %s", 200, payload)
}

func (o *GetChargingSessionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ev-charger/{charger_uuid}/charging-sessions][%d] getChargingSessionsOK %s", 200, payload)
}

func (o *GetChargingSessionsOK) GetPayload() *GetChargingSessionsOKBody {
	return o.Payload
}

func (o *GetChargingSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChargingSessionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetChargingSessionsOKBody get charging sessions o k body
// Example: {"data":[{"meter_start":933.4,"meter_stop":null,"started_at":"2000-09-03T01:31:55Z","started_by":"9f42852","stop_reason":null,"stopped_at":null,"stopped_by":null},{"meter_start":1423.7,"meter_stop":null,"started_at":"1981-03-03T20:26:34Z","started_by":"54bd6d5","stop_reason":null,"stopped_at":null,"stopped_by":null}]}
swagger:model GetChargingSessionsOKBody
*/
type GetChargingSessionsOKBody struct {

	// data
	// Example: [{"meter_start":933.4,"meter_stop":null,"started_at":"2000-09-03T01:31:55Z","started_by":"9f42852","stop_reason":null,"stopped_at":null,"stopped_by":null},{"meter_start":1423.7,"meter_stop":null,"started_at":"1981-03-03T20:26:34Z","started_by":"54bd6d5","stop_reason":null,"stopped_at":null,"stopped_by":null}]
	Data []*GetChargingSessionsOKBodyDataItems0 `json:"data"`
}

// Validate validates this get charging sessions o k body
func (o *GetChargingSessionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChargingSessionsOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getChargingSessionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getChargingSessionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get charging sessions o k body based on the context it is used
func (o *GetChargingSessionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChargingSessionsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getChargingSessionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getChargingSessionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChargingSessionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChargingSessionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetChargingSessionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetChargingSessionsOKBodyDataItems0 get charging sessions o k body data items0
swagger:model GetChargingSessionsOKBodyDataItems0
*/
type GetChargingSessionsOKBodyDataItems0 struct {

	// meter start
	// Example: 933.4
	MeterStart float64 `json:"meter_start,omitempty"`

	// meter stop
	MeterStop string `json:"meter_stop,omitempty"`

	// started at
	// Example: 2000-09-03T01:31:55Z
	StartedAt string `json:"started_at,omitempty"`

	// started by
	// Example: 9f42852
	StartedBy string `json:"started_by,omitempty"`

	// stop reason
	StopReason string `json:"stop_reason,omitempty"`

	// stopped at
	StoppedAt string `json:"stopped_at,omitempty"`

	// stopped by
	StoppedBy string `json:"stopped_by,omitempty"`
}

// Validate validates this get charging sessions o k body data items0
func (o *GetChargingSessionsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get charging sessions o k body data items0 based on context it is used
func (o *GetChargingSessionsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChargingSessionsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChargingSessionsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetChargingSessionsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
