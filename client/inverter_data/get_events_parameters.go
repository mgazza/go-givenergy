// Code generated by go-swagger; DO NOT EDIT.

package inverter_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetEventsParams creates a new GetEventsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEventsParams() *GetEventsParams {
	return &GetEventsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEventsParamsWithTimeout creates a new GetEventsParams object
// with the ability to set a timeout on a request.
func NewGetEventsParamsWithTimeout(timeout time.Duration) *GetEventsParams {
	return &GetEventsParams{
		timeout: timeout,
	}
}

// NewGetEventsParamsWithContext creates a new GetEventsParams object
// with the ability to set a context for a request.
func NewGetEventsParamsWithContext(ctx context.Context) *GetEventsParams {
	return &GetEventsParams{
		Context: ctx,
	}
}

// NewGetEventsParamsWithHTTPClient creates a new GetEventsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEventsParamsWithHTTPClient(client *http.Client) *GetEventsParams {
	return &GetEventsParams{
		HTTPClient: client,
	}
}

/*
GetEventsParams contains all the parameters to send to the API endpoint

	for the get events operation.

	Typically these are written to a http.Request.
*/
type GetEventsParams struct {

	// Authorization.
	Authorization *string

	/* Cleared.

	   Whether 'cleared' events should be included with the data. Default is false
	*/
	Cleared *bool

	/* End.

	   Must be a valid date. Must be a date after <code>start</code>.
	*/
	End *string

	/* InverterSerialNumber.

	   The serial number of the inverter.
	*/
	InverterSerialNumber string

	/* Page.

	   Page number to return
	*/
	Page *int64

	/* PageSize.

	   Number of items to return in a page. Defaults to 15
	*/
	PageSize *int64

	/* Start.

	   Must be a valid date. Must be a date before <code>tomorrow</code>.
	*/
	Start *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get events params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEventsParams) WithDefaults() *GetEventsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get events params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEventsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get events params
func (o *GetEventsParams) WithTimeout(timeout time.Duration) *GetEventsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get events params
func (o *GetEventsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get events params
func (o *GetEventsParams) WithContext(ctx context.Context) *GetEventsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get events params
func (o *GetEventsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get events params
func (o *GetEventsParams) WithHTTPClient(client *http.Client) *GetEventsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get events params
func (o *GetEventsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get events params
func (o *GetEventsParams) WithAuthorization(authorization *string) *GetEventsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get events params
func (o *GetEventsParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithCleared adds the cleared to the get events params
func (o *GetEventsParams) WithCleared(cleared *bool) *GetEventsParams {
	o.SetCleared(cleared)
	return o
}

// SetCleared adds the cleared to the get events params
func (o *GetEventsParams) SetCleared(cleared *bool) {
	o.Cleared = cleared
}

// WithEnd adds the end to the get events params
func (o *GetEventsParams) WithEnd(end *string) *GetEventsParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get events params
func (o *GetEventsParams) SetEnd(end *string) {
	o.End = end
}

// WithInverterSerialNumber adds the inverterSerialNumber to the get events params
func (o *GetEventsParams) WithInverterSerialNumber(inverterSerialNumber string) *GetEventsParams {
	o.SetInverterSerialNumber(inverterSerialNumber)
	return o
}

// SetInverterSerialNumber adds the inverterSerialNumber to the get events params
func (o *GetEventsParams) SetInverterSerialNumber(inverterSerialNumber string) {
	o.InverterSerialNumber = inverterSerialNumber
}

// WithPage adds the page to the get events params
func (o *GetEventsParams) WithPage(page *int64) *GetEventsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get events params
func (o *GetEventsParams) SetPage(page *int64) {
	o.Page = page
}

// WithPageSize adds the pageSize to the get events params
func (o *GetEventsParams) WithPageSize(pageSize *int64) *GetEventsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get events params
func (o *GetEventsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithStart adds the start to the get events params
func (o *GetEventsParams) WithStart(start *string) *GetEventsParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get events params
func (o *GetEventsParams) SetStart(start *string) {
	o.Start = start
}

// WriteToRequest writes these params to a swagger request
func (o *GetEventsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}
	}

	if o.Cleared != nil {

		// query param cleared
		var qrCleared bool

		if o.Cleared != nil {
			qrCleared = *o.Cleared
		}
		qCleared := swag.FormatBool(qrCleared)
		if qCleared != "" {

			if err := r.SetQueryParam("cleared", qCleared); err != nil {
				return err
			}
		}
	}

	if o.End != nil {

		// query param end
		var qrEnd string

		if o.End != nil {
			qrEnd = *o.End
		}
		qEnd := qrEnd
		if qEnd != "" {

			if err := r.SetQueryParam("end", qEnd); err != nil {
				return err
			}
		}
	}

	// path param inverter_serial_number
	if err := r.SetPathParam("inverter_serial_number", o.InverterSerialNumber); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.Start != nil {

		// query param start
		var qrStart string

		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := qrStart
		if qStart != "" {

			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
