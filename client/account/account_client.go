// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetAccountChildrenInformationByID(params *GetAccountChildrenInformationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountChildrenInformationByIDOK, error)

	GetAccountDonglesByID(params *GetAccountDonglesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountDonglesByIDOK, error)

	GetAccountInformationByID(params *GetAccountInformationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountInformationByIDOK, error)

	GetAccountInformationByUsername(params *GetAccountInformationByUsernameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountInformationByUsernameOK, error)

	GetListOfAccountsAssociatedWithYourSSOIdentity(params *GetListOfAccountsAssociatedWithYourSSOIdentityParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetListOfAccountsAssociatedWithYourSSOIdentityOK, error)

	GetYourAccountChildrenInformation(params *GetYourAccountChildrenInformationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetYourAccountChildrenInformationOK, error)

	GetYourAccountInformation(params *GetYourAccountInformationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetYourAccountInformationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetAccountChildrenInformationByID gets account children information by ID

Retrieves a list of accounts that the specified account has access to
*/
func (a *Client) GetAccountChildrenInformationByID(params *GetAccountChildrenInformationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountChildrenInformationByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAccountChildrenInformationByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAccountChildrenInformationByID",
		Method:             "GET",
		PathPattern:        "/account-children/{user_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAccountChildrenInformationByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAccountChildrenInformationByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAccountChildrenInformationByID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAccountDonglesByID gets account dongles by ID

Retrieves a list of dongles for an account by its ID
*/
func (a *Client) GetAccountDonglesByID(params *GetAccountDonglesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountDonglesByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAccountDonglesByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAccountDonglesByID",
		Method:             "GET",
		PathPattern:        "/account/{user_username}/devices",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAccountDonglesByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAccountDonglesByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAccountDonglesByID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAccountInformationByID gets account information by ID

Retrieves the information of a specific account by its ID
*/
func (a *Client) GetAccountInformationByID(params *GetAccountInformationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountInformationByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAccountInformationByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAccountInformationByID",
		Method:             "GET",
		PathPattern:        "/account/{user_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAccountInformationByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAccountInformationByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAccountInformationByID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAccountInformationByUsername gets account information by username

Retrieves the information of a specific account by its username
*/
func (a *Client) GetAccountInformationByUsername(params *GetAccountInformationByUsernameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAccountInformationByUsernameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAccountInformationByUsernameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAccountInformationByUsername",
		Method:             "GET",
		PathPattern:        "/account/search/{user_username}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAccountInformationByUsernameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAccountInformationByUsernameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAccountInformationByUsername: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetListOfAccountsAssociatedWithYourSSOIdentity gets list of accounts associated with your s s o identity

Retrieves all accounts that have been associated with your SSO identity
*/
func (a *Client) GetListOfAccountsAssociatedWithYourSSOIdentity(params *GetListOfAccountsAssociatedWithYourSSOIdentityParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetListOfAccountsAssociatedWithYourSSOIdentityOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetListOfAccountsAssociatedWithYourSSOIdentityParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getListOfAccountsAssociatedWithYourSSOIdentity",
		Method:             "GET",
		PathPattern:        "/sso/me/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetListOfAccountsAssociatedWithYourSSOIdentityReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetListOfAccountsAssociatedWithYourSSOIdentityOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getListOfAccountsAssociatedWithYourSSOIdentity: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetYourAccountChildrenInformation gets your account children information

Retrieves a list of accounts that your account has access to
*/
func (a *Client) GetYourAccountChildrenInformation(params *GetYourAccountChildrenInformationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetYourAccountChildrenInformationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetYourAccountChildrenInformationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getYourAccountChildrenInformation",
		Method:             "GET",
		PathPattern:        "/account-children",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetYourAccountChildrenInformationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetYourAccountChildrenInformationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getYourAccountChildrenInformation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetYourAccountInformation gets your account information

Retrieves your account information
*/
func (a *Client) GetYourAccountInformation(params *GetYourAccountInformationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetYourAccountInformationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetYourAccountInformationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getYourAccountInformation",
		Method:             "GET",
		PathPattern:        "/account",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetYourAccountInformationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetYourAccountInformationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getYourAccountInformation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
