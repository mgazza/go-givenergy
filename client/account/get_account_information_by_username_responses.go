// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAccountInformationByUsernameReader is a Reader for the GetAccountInformationByUsername structure.
type GetAccountInformationByUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountInformationByUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountInformationByUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /account/search/{user_username}] getAccountInformationByUsername", response, response.Code())
	}
}

// NewGetAccountInformationByUsernameOK creates a GetAccountInformationByUsernameOK with default headers values
func NewGetAccountInformationByUsernameOK() *GetAccountInformationByUsernameOK {
	return &GetAccountInformationByUsernameOK{}
}

/*
GetAccountInformationByUsernameOK describes a response with status code 200, with default header values.

GetAccountInformationByUsernameOK get account information by username o k
*/
type GetAccountInformationByUsernameOK struct {
	Payload *GetAccountInformationByUsernameOKBody
}

// IsSuccess returns true when this get account information by username o k response has a 2xx status code
func (o *GetAccountInformationByUsernameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account information by username o k response has a 3xx status code
func (o *GetAccountInformationByUsernameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account information by username o k response has a 4xx status code
func (o *GetAccountInformationByUsernameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account information by username o k response has a 5xx status code
func (o *GetAccountInformationByUsernameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account information by username o k response a status code equal to that given
func (o *GetAccountInformationByUsernameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get account information by username o k response
func (o *GetAccountInformationByUsernameOK) Code() int {
	return 200
}

func (o *GetAccountInformationByUsernameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/search/{user_username}][%d] getAccountInformationByUsernameOK %s", 200, payload)
}

func (o *GetAccountInformationByUsernameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /account/search/{user_username}][%d] getAccountInformationByUsernameOK %s", 200, payload)
}

func (o *GetAccountInformationByUsernameOK) GetPayload() *GetAccountInformationByUsernameOKBody {
	return o.Payload
}

func (o *GetAccountInformationByUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAccountInformationByUsernameOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetAccountInformationByUsernameOKBody get account information by username o k body
// Example: {"data":{"address":"Flat 31\nKing Lake","company":null,"country":"UNITED_KINGDOM","email":"noah.phillips@rogers.biz","first_name":"Jack","id":18,"name":"lmartin.14","postcode":"AB11 5QE","role":"ENGINEER","standard_timezone":"Europe/London","surname":"Palmer","telephone_number":"(0064) 295 7686","timezone":"GMT"}}
swagger:model GetAccountInformationByUsernameOKBody
*/
type GetAccountInformationByUsernameOKBody struct {

	// data
	Data *GetAccountInformationByUsernameOKBodyData `json:"data,omitempty"`
}

// Validate validates this get account information by username o k body
func (o *GetAccountInformationByUsernameOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAccountInformationByUsernameOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAccountInformationByUsernameOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAccountInformationByUsernameOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get account information by username o k body based on the context it is used
func (o *GetAccountInformationByUsernameOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAccountInformationByUsernameOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if swag.IsZero(o.Data) { // not required
			return nil
		}

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAccountInformationByUsernameOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAccountInformationByUsernameOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountInformationByUsernameOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountInformationByUsernameOKBody) UnmarshalBinary(b []byte) error {
	var res GetAccountInformationByUsernameOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetAccountInformationByUsernameOKBodyData get account information by username o k body data
swagger:model GetAccountInformationByUsernameOKBodyData
*/
type GetAccountInformationByUsernameOKBodyData struct {

	// address
	// Example: Flat 31\nKing Lake
	Address string `json:"address,omitempty"`

	// company
	Company string `json:"company,omitempty"`

	// country
	// Example: UNITED_KINGDOM
	Country string `json:"country,omitempty"`

	// email
	// Example: noah.phillips@rogers.biz
	Email string `json:"email,omitempty"`

	// first name
	// Example: Jack
	FirstName string `json:"first_name,omitempty"`

	// id
	// Example: 18
	ID int64 `json:"id,omitempty"`

	// name
	// Example: lmartin.14
	Name string `json:"name,omitempty"`

	// postcode
	// Example: AB11 5QE
	Postcode string `json:"postcode,omitempty"`

	// role
	// Example: ENGINEER
	Role string `json:"role,omitempty"`

	// standard timezone
	// Example: Europe/London
	StandardTimezone string `json:"standard_timezone,omitempty"`

	// surname
	// Example: Palmer
	Surname string `json:"surname,omitempty"`

	// telephone number
	// Example: (0064) 295 7686
	TelephoneNumber string `json:"telephone_number,omitempty"`

	// timezone
	// Example: GMT
	Timezone string `json:"timezone,omitempty"`
}

// Validate validates this get account information by username o k body data
func (o *GetAccountInformationByUsernameOKBodyData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get account information by username o k body data based on context it is used
func (o *GetAccountInformationByUsernameOKBodyData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountInformationByUsernameOKBodyData) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountInformationByUsernameOKBodyData) UnmarshalBinary(b []byte) error {
	var res GetAccountInformationByUsernameOKBodyData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
