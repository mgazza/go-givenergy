// Code generated by go-swagger; DO NOT EDIT.

package smart_device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSmartDeviceReader is a Reader for the CreateSmartDevice structure.
type CreateSmartDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSmartDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSmartDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSmartDeviceOK creates a CreateSmartDeviceOK with default headers values
func NewCreateSmartDeviceOK() *CreateSmartDeviceOK {
	return &CreateSmartDeviceOK{}
}

/*
CreateSmartDeviceOK describes a response with status code 200, with default header values.

CreateSmartDeviceOK create smart device o k
*/
type CreateSmartDeviceOK struct {
	Payload *CreateSmartDeviceOKBody
}

// IsSuccess returns true when this create smart device o k response has a 2xx status code
func (o *CreateSmartDeviceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create smart device o k response has a 3xx status code
func (o *CreateSmartDeviceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create smart device o k response has a 4xx status code
func (o *CreateSmartDeviceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create smart device o k response has a 5xx status code
func (o *CreateSmartDeviceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create smart device o k response a status code equal to that given
func (o *CreateSmartDeviceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create smart device o k response
func (o *CreateSmartDeviceOK) Code() int {
	return 200
}

func (o *CreateSmartDeviceOK) Error() string {
	return fmt.Sprintf("[POST /smart-device][%d] createSmartDeviceOK  %+v", 200, o.Payload)
}

func (o *CreateSmartDeviceOK) String() string {
	return fmt.Sprintf("[POST /smart-device][%d] createSmartDeviceOK  %+v", 200, o.Payload)
}

func (o *CreateSmartDeviceOK) GetPayload() *CreateSmartDeviceOKBody {
	return o.Payload
}

func (o *CreateSmartDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateSmartDeviceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateSmartDeviceBody create smart device body
swagger:model CreateSmartDeviceBody
*/
type CreateSmartDeviceBody struct {

	// An alternate name for the smart device.
	// Example: consequatur
	Alias string `json:"alias,omitempty"`

	// The name of the product's manufacturer.
	// Example: consequatur
	Manufacturer string `json:"manufacturer,omitempty"`

	// other data
	// Example: []
	OtherData interface{} `json:"other_data,omitempty"`

	// The model name of the product.
	// Example: consequatur
	ProductName string `json:"product_name,omitempty"`

	// The serial number of the smart device.
	// Example: consequatur
	// Required: true
	SerialNumber *string `json:"serial_number"`
}

// Validate validates this create smart device body
func (o *CreateSmartDeviceBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSerialNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSmartDeviceBody) validateSerialNumber(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"serial_number", "body", o.SerialNumber); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create smart device body based on context it is used
func (o *CreateSmartDeviceBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateSmartDeviceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSmartDeviceBody) UnmarshalBinary(b []byte) error {
	var res CreateSmartDeviceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateSmartDeviceOKBody create smart device o k body
// Example: {"data":[{"alias":"iste","other_data":{"graph_color":"#22c331","hardware_id":"e","local_key":"/"},"uuid":"58b5215d-ef7b-47fb-8897-79da6e0cc184"},{"alias":"ut","other_data":{"graph_color":"#913ee5","hardware_id":"#","local_key":"l"},"uuid":"d6353976-5898-4a54-b610-daaaa147017e"}]}
swagger:model CreateSmartDeviceOKBody
*/
type CreateSmartDeviceOKBody struct {

	// data
	// Example: [{"alias":"iste","other_data":{"graph_color":"#22c331","hardware_id":"e","local_key":"/"},"uuid":"58b5215d-ef7b-47fb-8897-79da6e0cc184"},{"alias":"ut","other_data":{"graph_color":"#913ee5","hardware_id":"#","local_key":"l"},"uuid":"d6353976-5898-4a54-b610-daaaa147017e"}]
	Data []*CreateSmartDeviceOKBodyDataItems0 `json:"data"`
}

// Validate validates this create smart device o k body
func (o *CreateSmartDeviceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSmartDeviceOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createSmartDeviceOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createSmartDeviceOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create smart device o k body based on the context it is used
func (o *CreateSmartDeviceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSmartDeviceOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createSmartDeviceOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createSmartDeviceOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateSmartDeviceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSmartDeviceOKBody) UnmarshalBinary(b []byte) error {
	var res CreateSmartDeviceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateSmartDeviceOKBodyDataItems0 create smart device o k body data items0
swagger:model CreateSmartDeviceOKBodyDataItems0
*/
type CreateSmartDeviceOKBodyDataItems0 struct {

	// alias
	// Example: iste
	Alias string `json:"alias,omitempty"`

	// other data
	OtherData *CreateSmartDeviceOKBodyDataItems0OtherData `json:"other_data,omitempty"`

	// uuid
	// Example: 58b5215d-ef7b-47fb-8897-79da6e0cc184
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this create smart device o k body data items0
func (o *CreateSmartDeviceOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOtherData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSmartDeviceOKBodyDataItems0) validateOtherData(formats strfmt.Registry) error {
	if swag.IsZero(o.OtherData) { // not required
		return nil
	}

	if o.OtherData != nil {
		if err := o.OtherData.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("other_data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("other_data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create smart device o k body data items0 based on the context it is used
func (o *CreateSmartDeviceOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateOtherData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSmartDeviceOKBodyDataItems0) contextValidateOtherData(ctx context.Context, formats strfmt.Registry) error {

	if o.OtherData != nil {
		if err := o.OtherData.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("other_data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("other_data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateSmartDeviceOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSmartDeviceOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res CreateSmartDeviceOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateSmartDeviceOKBodyDataItems0OtherData create smart device o k body data items0 other data
swagger:model CreateSmartDeviceOKBodyDataItems0OtherData
*/
type CreateSmartDeviceOKBodyDataItems0OtherData struct {

	// graph color
	// Example: #22c331
	GraphColor string `json:"graph_color,omitempty"`

	// hardware id
	// Example: e
	HardwareID string `json:"hardware_id,omitempty"`

	// local key
	// Example: /
	LocalKey string `json:"local_key,omitempty"`
}

// Validate validates this create smart device o k body data items0 other data
func (o *CreateSmartDeviceOKBodyDataItems0OtherData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create smart device o k body data items0 other data based on context it is used
func (o *CreateSmartDeviceOKBodyDataItems0OtherData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateSmartDeviceOKBodyDataItems0OtherData) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSmartDeviceOKBodyDataItems0OtherData) UnmarshalBinary(b []byte) error {
	var res CreateSmartDeviceOKBodyDataItems0OtherData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
